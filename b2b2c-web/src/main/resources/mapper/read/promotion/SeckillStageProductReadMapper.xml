<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slodon.b2b2c.dao.read.promotion.SeckillStageProductReadMapper">
  <resultMap id="resultMap" type="com.slodon.b2b2c.promotion.pojo.SeckillStageProduct">
    <id column="stage_product_id" property="stageProductId" />
    <result column="start_time" property="startTime" />
    <result column="end_time" property="endTime" />
    <result column="product_id" property="productId" />
    <result column="goods_id" property="goodsId" />
    <result column="main_image" property="mainImage" />
    <result column="goods_name" property="goodsName" />
    <result column="store_id" property="storeId" />
    <result column="store_name" property="storeName" />
    <result column="product_price" property="productPrice" />
    <result column="seckill_price" property="seckillPrice" />
    <result column="seckill_stock" property="seckillStock" />
    <result column="upper_limit" property="upperLimit" />
    <result column="buyer_count" property="buyerCount" />
    <result column="buy_quantity" property="buyQuantity" />
    <result column="verify_state" property="verifyState" />
    <result column="remark" property="remark" />
    <result column="seckill_id" property="seckillId" />
    <result column="seckill_name" property="seckillName" />
    <result column="stage_id" property="stageId" />
    <result column="stage_name" property="stageName" />
    <result column="label_id" property="labelId" />
    <result column="label_name" property="labelName" />
    <result column="product_stock" property="productStock" />
    <result column="state" property="state" />
  </resultMap>
  <!--按照主键值进行操作-->
  <sql id="pkWhere">
    WHERE `stage_product_id` = #{primaryKey}
  </sql>
  <!--操作条件-->
  <sql id="whereCondition">
    <if test="example != null">
      <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="example.stageProductIdNotEquals != null">
          AND `stage_product_id` != #{example.stageProductIdNotEquals}
        </if>
        <if test="example.stageProductIdIn != null">
          AND `stage_product_id` in (${example.stageProductIdIn})
        </if>
        <if test="example.startTimeAfter != null">
          AND `start_time` <![CDATA[ >= ]]> #{example.startTimeAfter}
        </if>
        <if test="example.startTimeBefore != null">
          AND `start_time` <![CDATA[ <= ]]> #{example.startTimeBefore}
        </if>
        <if test="example.endTimeAfter != null">
          AND `end_time` <![CDATA[ >= ]]> #{example.endTimeAfter}
        </if>
        <if test="example.endTimeBefore != null">
          AND `end_time` <![CDATA[ <= ]]> #{example.endTimeBefore}
        </if>
        <if test="example.productId != null">
          AND `product_id` = #{example.productId}
        </if>
        <if test="example.productIdIn != null">
          AND `product_id` in (${example.productIdIn})
        </if>
        <if test="example.goodsId != null">
          AND `goods_id` = #{example.goodsId}
        </if>
        <if test="example.goodsIdIn != null">
          AND `goods_id` in (${example.goodsIdIn})
        </if>
        <if test="example.mainImage != null">
          AND `main_image` = #{example.mainImage}
        </if>
        <if test="example.goodsName != null">
          AND `goods_name` = #{example.goodsName}
        </if>
        <if test="example.goodsNameLike != null">
          AND `goods_name` like concat('%',#{example.goodsNameLike},'%')
        </if>
        <if test="example.storeId != null">
          AND `store_id` = #{example.storeId}
        </if>
        <if test="example.storeName != null">
          AND `store_name` = #{example.storeName}
        </if>
        <if test="example.storeNameLike != null">
          AND `store_name` like concat('%',#{example.storeNameLike},'%')
        </if>
        <if test="example.productPrice != null">
          AND `product_price` = #{example.productPrice}
        </if>
        <if test="example.seckillPrice != null">
          AND `seckill_price` = #{example.seckillPrice}
        </if>
        <if test="example.seckillStock != null">
          AND `seckill_stock` = #{example.seckillStock}
        </if>
        <if test="example.upperLimit != null">
          AND `upper_limit` = #{example.upperLimit}
        </if>
        <if test="example.buyerCount != null">
          AND `buyer_count` = #{example.buyerCount}
        </if>
        <if test="example.buyQuantity != null">
          AND `buy_quantity` = #{example.buyQuantity}
        </if>
        <if test="example.verifyState != null">
          AND `verify_state` = #{example.verifyState}
        </if>
        <if test="example.verifyStateIn != null">
          AND `verify_state` in (${example.verifyStateIn})
        </if>
        <if test="example.verifyStateNotIn != null">
          AND `verify_state` not in (${example.verifyStateNotIn})
        </if>
        <if test="example.verifyStateNotEquals != null">
          AND `verify_state` != #{example.verifyStateNotEquals}
        </if>
        <if test="example.remark != null">
          AND `remark` = #{example.remark}
        </if>
        <if test="example.seckillId != null">
          AND `seckill_id` = #{example.seckillId}
        </if>
        <if test="example.seckillName != null">
          AND `seckill_name` = #{example.seckillName}
        </if>
        <if test="example.seckillNameLike != null">
          AND `seckill_name` like concat('%',#{example.seckillNameLike},'%')
        </if>
        <if test="example.stageId != null">
          AND `stage_id` = #{example.stageId}
        </if>
        <if test="example.stageIdIn != null">
          AND `stage_id` in (${example.stageIdIn})
        </if>
        <if test="example.stageName != null">
          AND `stage_name` = #{example.stageName}
        </if>
        <if test="example.stageNameLike != null">
          AND `stage_name` like concat('%',#{example.stageNameLike},'%')
        </if>
        <if test="example.labelId != null">
          AND `label_id` = #{example.labelId}
        </if>
        <if test="example.labelName != null">
          AND `label_name` = #{example.labelName}
        </if>
        <if test="example.labelNameLike != null">
          AND `label_name` like concat('%',#{example.labelNameLike},'%')
        </if>
        <if test="example.productStock != null">
          AND `product_stock` = #{example.productStock}
        </if>
        <if test="example.state != null">
          AND `state` = #{example.state}
        </if>
        <if test="example.stateIn != null">
          AND `state` in (${example.stateIn})
        </if>
        <if test="example.stateNotIn != null">
          AND `state` not in (${example.stateNotIn})
        </if>
        <if test="example.stateNotEquals != null">
          AND `state` != #{example.stateNotEquals}
        </if>
      </trim>
    </if>
  </sql>
  <!--排序条件-->
  <sql id="orderBy">
    ORDER BY `stage_product_id` DESC
  </sql>
  <sql id="orderByOther">
    order by ${example.orderBy}
  </sql>
  <!--分组条件-->
  <sql id="groupBy">
    group by ${example.groupBy}
  </sql>
  <!--分页条件-->
  <sql id="limit">
    <if test="size != null and size &gt; 0">
      limit #{startRow},#{size}
    </if>
  </sql>
  <!--查询符合条件的记录数-->
  <select id="countByExample" parameterType="com.slodon.b2b2c.promotion.example.SeckillStageProductExample" resultType="java.lang.Integer">
    SELECT
      COUNT(*)
    FROM `promotion_seckill_stage_product`
    <include refid="whereCondition" />
  </select>
  <!--根据goodsId分组查询符合条件的记录数-->
  <select id="countByGoodsIdExample" parameterType="com.slodon.b2b2c.promotion.example.SeckillStageProductExample" resultType="java.lang.Integer">
    SELECT
    COUNT(DISTINCT ${fields})
    FROM `promotion_seckill_stage_product`
    <include refid="whereCondition"/>
  </select>
  <!--根据主键查询记录-->
  <select id="getByPrimaryKey" resultMap="resultMap">
    SELECT
      *
    FROM `promotion_seckill_stage_product`
    <include refid="pkWhere" />
  </select>
  <!--查询符合条件的记录(所有字段)-->
  <select id="listByExample" resultMap="resultMap">
    SELECT
      *
    FROM `promotion_seckill_stage_product`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
  </select>
  <!--分页查询符合条件的记录(所有字段)-->
  <select id="listPageByExample" resultMap="resultMap">
    SELECT
      *
    FROM `promotion_seckill_stage_product`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
    <include refid="limit" />
  </select>
  <!--查询符合条件的记录(指定字段)-->
  <select id="listFieldsByExample" resultMap="resultMap">
    SELECT
      ${fields}
    FROM `promotion_seckill_stage_product`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
  </select>
  <!--分页查询符合条件的记录(指定字段)-->
  <select id="listFieldsPageByExample" resultMap="resultMap">
    SELECT
      ${fields}
    FROM `promotion_seckill_stage_product`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
    <include refid="limit" />
  </select>
</mapper>