<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slodon.b2b2c.dao.read.system.BillReadMapper">
  <resultMap id="resultMap" type="com.slodon.b2b2c.system.pojo.Bill">
    <id column="bill_id" property="billId" />
    <result column="bill_sn" property="billSn" />
    <result column="store_id" property="storeId" />
    <result column="store_name" property="storeName" />
    <result column="start_time" property="startTime" />
    <result column="end_time" property="endTime" />
    <result column="order_amount" property="orderAmount" />
    <result column="commission" property="commission" />
    <result column="refund_commission" property="refundCommission" />
    <result column="refund_amount" property="refundAmount" />
    <result column="platform_activity_amount" property="platformActivityAmount" />
    <result column="platform_voucher_amount" property="platformVoucherAmount" />
    <result column="integral_cash_amount" property="integralCashAmount" />
    <result column="compensation_amount" property="compensationAmount" />
    <result column="settle_amount" property="settleAmount" />
    <result column="state" property="state" />
    <result column="payment_remark" property="paymentRemark" />
    <result column="payment_evidence" property="paymentEvidence" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
  </resultMap>
  <!--按照主键值进行操作-->
  <sql id="pkWhere">
    WHERE `bill_id` = #{primaryKey}
  </sql>
  <!--操作条件-->
  <sql id="whereCondition">
    <if test="example != null">
      <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="example.billIdNotEquals != null">
          AND `bill_id` != #{example.billIdNotEquals}
        </if>
        <if test="example.billIdIn != null">
          AND `bill_id` in (${example.billIdIn})
        </if>
        <if test="example.billSn != null">
          AND `bill_sn` = #{example.billSn}
        </if>
        <if test="example.billSnIn != null">
          AND `bill_sn` in (${example.billSnIn})
        </if>
        <if test="example.billSnLike != null">
          AND `bill_sn` like concat('%',#{example.billSnLike},'%')
        </if>
        <if test="example.storeId != null">
          AND `store_id` = #{example.storeId}
        </if>
        <if test="example.storeName != null">
          AND `store_name` = #{example.storeName}
        </if>
        <if test="example.storeNameLike != null">
          AND `store_name` like concat('%',#{example.storeNameLike},'%')
        </if>
        <if test="example.startTimeAfter != null">
          AND `start_time` <![CDATA[ >= ]]> #{example.startTimeAfter}
        </if>
        <if test="example.startTimeBefore != null">
          AND `start_time` <![CDATA[ <= ]]> #{example.startTimeBefore}
        </if>
        <if test="example.endTimeAfter != null">
          AND `end_time` <![CDATA[ >= ]]> #{example.endTimeAfter}
        </if>
        <if test="example.endTimeBefore != null">
          AND `end_time` <![CDATA[ <= ]]> #{example.endTimeBefore}
        </if>
        <if test="example.orderAmount != null">
          AND `order_amount` = #{example.orderAmount}
        </if>
        <if test="example.commission != null">
          AND `commission` = #{example.commission}
        </if>
        <if test="example.refundCommission != null">
          AND `refund_commission` = #{example.refundCommission}
        </if>
        <if test="example.refundAmount != null">
          AND `refund_amount` = #{example.refundAmount}
        </if>
        <if test="example.platformActivityAmount != null">
          AND `platform_activity_amount` = #{example.platformActivityAmount}
        </if>
        <if test="example.platformVoucherAmount != null">
          AND `platform_voucher_amount` = #{example.platformVoucherAmount}
        </if>
        <if test="example.integralCashAmount != null">
          AND `integral_cash_amount` = #{example.integralCashAmount}
        </if>
        <if test="example.settleAmount != null">
          AND `settle_amount` = #{example.settleAmount}
        </if>
        <if test="example.state != null">
          AND `state` = #{example.state}
        </if>
        <if test="example.stateIn != null">
          AND `state` in (${example.stateIn})
        </if>
        <if test="example.stateNotIn != null">
          AND `state` not in (${example.stateNotIn})
        </if>
        <if test="example.stateNotEquals != null">
          AND `state` != #{example.stateNotEquals}
        </if>
        <if test="example.paymentRemark != null">
          AND `payment_remark` = #{example.paymentRemark}
        </if>
        <if test="example.paymentEvidence != null">
          AND `payment_evidence` = #{example.paymentEvidence}
        </if>
        <if test="example.createTimeAfter != null">
          AND `create_time` <![CDATA[ >= ]]> #{example.createTimeAfter}
        </if>
        <if test="example.createTimeBefore != null">
          AND `create_time` <![CDATA[ <= ]]> #{example.createTimeBefore}
        </if>
        <if test="example.updateTimeAfter != null">
          AND `update_time` <![CDATA[ >= ]]> #{example.updateTimeAfter}
        </if>
        <if test="example.updateTimeBefore != null">
          AND `update_time` <![CDATA[ <= ]]> #{example.updateTimeBefore}
        </if>
      </trim>
    </if>
  </sql>
  <!--排序条件-->
  <sql id="orderBy">
    ORDER BY `bill_id` DESC
  </sql>
  <sql id="orderByOther">
    order by ${example.orderBy}
  </sql>
  <!--分组条件-->
  <sql id="groupBy">
    group by ${example.groupBy}
  </sql>
  <!--分页条件-->
  <sql id="limit">
    <if test="size != null and size &gt; 0">
      limit #{startRow},#{size}
    </if>
  </sql>
  <!--查询符合条件的记录数-->
  <select id="countByExample" parameterType="com.slodon.b2b2c.system.example.BillExample" resultType="java.lang.Integer">
    SELECT
      COUNT(*)
    FROM `sys_bill`
    <include refid="whereCondition" />
  </select>
  <!--根据主键查询记录-->
  <select id="getByPrimaryKey" resultMap="resultMap">
    SELECT
      *
    FROM `sys_bill`
    <include refid="pkWhere" />
  </select>
  <!--查询符合条件的记录(所有字段)-->
  <select id="listByExample" resultMap="resultMap">
    SELECT
      *
    FROM `sys_bill`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
  </select>
  <!--分页查询符合条件的记录(所有字段)-->
  <select id="listPageByExample" resultMap="resultMap">
    SELECT
      *
    FROM `sys_bill`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
    <include refid="limit" />
  </select>
  <!--查询符合条件的记录(指定字段)-->
  <select id="listFieldsByExample" resultMap="resultMap">
    SELECT
      ${fields}
    FROM `sys_bill`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
  </select>
  <!--分页查询符合条件的记录(指定字段)-->
  <select id="listFieldsPageByExample" resultMap="resultMap">
    SELECT
      ${fields}
    FROM `sys_bill`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
    <include refid="limit" />
  </select>
</mapper>