<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slodon.b2b2c.dao.read.business.OrderReturnReadMapper">
  <resultMap id="resultMap" type="com.slodon.b2b2c.business.pojo.OrderReturn">
    <id column="return_id" property="returnId" />
    <result column="afs_sn" property="afsSn" />
    <result column="order_sn" property="orderSn" />
    <result column="store_id" property="storeId" />
    <result column="store_name" property="storeName" />
    <result column="member_id" property="memberId" />
    <result column="member_name" property="memberName" />
    <result column="return_money_type" property="returnMoneyType" />
    <result column="return_type" property="returnType" />
    <result column="return_num" property="returnNum" />
    <result column="return_money_amount" property="returnMoneyAmount" />
    <result column="return_integral_amount" property="returnIntegralAmount" />
    <result column="deduct_integral_amount" property="deductIntegralAmount" />
    <result column="return_express_amount" property="returnExpressAmount" />
    <result column="return_voucher_code" property="returnVoucherCode" />
    <result column="commission_rate" property="commissionRate" />
    <result column="commission_amount" property="commissionAmount" />
    <result column="state" property="state" />
    <result column="apply_time" property="applyTime" />
    <result column="complete_time" property="completeTime" />
    <result column="refuse_reason" property="refuseReason" />
  </resultMap>
  <!--按照主键值进行操作-->
  <sql id="pkWhere">
    WHERE `return_id` = #{primaryKey}
  </sql>
  <!--操作条件-->
  <sql id="whereCondition">
    <if test="example != null">
      <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="example.returnIdNotEquals != null">
          AND `return_id` != #{example.returnIdNotEquals}
        </if>
        <if test="example.returnIdIn != null">
          AND `return_id` in (${example.returnIdIn})
        </if>
        <if test="example.afsSn != null">
          AND `afs_sn` = #{example.afsSn}
        </if>
        <if test="example.afsSnLike != null">
          AND `afs_sn` like concat('%',#{example.afsSnLike},'%')
        </if>
        <if test="example.orderSn != null">
          AND `order_sn` = #{example.orderSn}
        </if>
        <if test="example.orderSnLike != null">
          AND `order_sn` like concat('%',#{example.orderSnLike},'%')
        </if>
        <if test="example.storeId != null">
          AND `store_id` = #{example.storeId}
        </if>
        <if test="example.storeName != null">
          AND `store_name` = #{example.storeName}
        </if>
        <if test="example.storeNameLike != null">
          AND `store_name` like concat('%',#{example.storeNameLike},'%')
        </if>
        <if test="example.memberId != null">
          AND `member_id` = #{example.memberId}
        </if>
        <if test="example.memberName != null">
          AND `member_name` = #{example.memberName}
        </if>
        <if test="example.memberNameLike != null">
          AND `member_name` like concat('%',#{example.memberNameLike},'%')
        </if>
        <if test="example.returnMoneyType != null">
          AND `return_money_type` = #{example.returnMoneyType}
        </if>
        <if test="example.returnType != null">
          AND `return_type` = #{example.returnType}
        </if>
        <if test="example.returnNum != null">
          AND `return_num` = #{example.returnNum}
        </if>
        <if test="example.returnMoneyAmount != null">
          AND `return_money_amount` = #{example.returnMoneyAmount}
        </if>
        <if test="example.returnIntegralAmount != null">
          AND `return_integral_amount` = #{example.returnIntegralAmount}
        </if>
        <if test="example.deductIntegralAmount != null">
          AND `deduct_integral_amount` = #{example.deductIntegralAmount}
        </if>
        <if test="example.returnExpressAmount != null">
          AND `return_express_amount` = #{example.returnExpressAmount}
        </if>
        <if test="example.returnVoucherCode != null">
          AND `return_voucher_code` = #{example.returnVoucherCode}
        </if>
        <if test="example.commissionRate != null">
          AND `commission_rate` = #{example.commissionRate}
        </if>
        <if test="example.commissionAmount != null">
          AND `commission_amount` = #{example.commissionAmount}
        </if>
        <if test="example.state != null">
          AND `state` = #{example.state}
        </if>
        <if test="example.stateIn != null">
          AND `state` in (${example.stateIn})
        </if>
        <if test="example.stateNotIn != null">
          AND `state` not in (${example.stateNotIn})
        </if>
        <if test="example.stateNotEquals != null">
          AND `state` != #{example.stateNotEquals}
        </if>
        <if test="example.applyTimeAfter != null">
          AND `apply_time` <![CDATA[ >= ]]> #{example.applyTimeAfter}
        </if>
        <if test="example.applyTimeBefore != null">
          AND `apply_time` <![CDATA[ <= ]]> #{example.applyTimeBefore}
        </if>
        <if test="example.completeTimeAfter != null">
          AND `complete_time` <![CDATA[ >= ]]> #{example.completeTimeAfter}
        </if>
        <if test="example.completeTimeBefore != null">
          AND `complete_time` <![CDATA[ <= ]]> #{example.completeTimeBefore}
        </if>
        <if test="example.refuseReason != null">
          AND `refuse_reason` = #{example.refuseReason}
        </if>
        <if test="example.refuseReasonLike != null">
          AND `refuse_reason` like concat('%',#{example.refuseReasonLike},'%')
        </if>
        <if test="example.orderProductId != null">
          AND `afs_sn` in (SELECT afs_sn FROM bz_order_after_service WHERE order_product_id = #{example.orderProductId})
        </if>
        <if test="example.deliverTimeEnd != null">
          AND `afs_sn` in (SELECT afs_sn FROM bz_order_after_service WHERE buyer_deliver_time &lt;= #{example.deliverTimeEnd} )
        </if>
      </trim>
    </if>
  </sql>
  <!--排序条件-->
  <sql id="orderBy">
    ORDER BY `return_id` DESC
  </sql>
  <sql id="orderByOther">
    order by ${example.orderBy}
  </sql>
  <!--分组条件-->
  <sql id="groupBy">
    group by ${example.groupBy}
  </sql>
  <!--分页条件-->
  <sql id="limit">
    <if test="size != null and size &gt; 0">
      limit #{startRow},#{size}
    </if>
  </sql>
  <!--查询符合条件的记录数-->
  <select id="countByExample" parameterType="com.slodon.b2b2c.business.example.OrderReturnExample" resultType="java.lang.Integer">
    SELECT
      COUNT(*)
    FROM `bz_order_return`
    <include refid="whereCondition" />
  </select>
  <!--根据主键查询记录-->
  <select id="getByPrimaryKey" resultMap="resultMap">
    SELECT
      *
    FROM `bz_order_return`
    <include refid="pkWhere" />
  </select>
  <!--查询符合条件的记录(所有字段)-->
  <select id="listByExample" resultMap="resultMap">
    SELECT
      *
    FROM `bz_order_return`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
  </select>
  <!--分页查询符合条件的记录(所有字段)-->
  <select id="listPageByExample" resultMap="resultMap">
    SELECT
      *
    FROM `bz_order_return`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
    <include refid="limit" />
  </select>
  <!--查询符合条件的记录(指定字段)-->
  <select id="listFieldsByExample" resultMap="resultMap">
    SELECT
      ${fields}
    FROM `bz_order_return`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
  </select>
  <!--分页查询符合条件的记录(指定字段)-->
  <select id="listFieldsPageByExample" resultMap="resultMap">
    SELECT
      ${fields}
    FROM `bz_order_return`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
    <include refid="limit" />
  </select>
</mapper>