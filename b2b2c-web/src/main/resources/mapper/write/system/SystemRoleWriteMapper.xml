<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.slodon.b2b2c.dao.write.system.SystemRoleWriteMapper">
  <resultMap id="resultMap" type="com.slodon.b2b2c.system.pojo.SystemRole">
    <id column="role_id" property="roleId" />
    <result column="role_name" property="roleName" />
    <result column="description" property="description" />
    <result column="create_admin_id" property="createAdminId" />
    <result column="create_admin_name" property="createAdminName" />
    <result column="create_time" property="createTime" />
    <result column="update_admin_id" property="updateAdminId" />
    <result column="update_admin_name" property="updateAdminName" />
    <result column="update_time" property="updateTime" />
    <result column="state" property="state" />
    <result column="is_inner" property="isInner" />
  </resultMap>
  <!--除主键外的所有字段，用于插入操作-->
  <sql id="columns">
    <trim suffixOverrides=",">
      <if test="roleName != null">
        `role_name`,
      </if>
      <if test="description != null">
        `description`,
      </if>
      <if test="createAdminId != null">
        `create_admin_id`,
      </if>
      <if test="createAdminName != null">
        `create_admin_name`,
      </if>
      <if test="createTime != null">
        `create_time`,
      </if>
      <if test="updateAdminId != null">
        `update_admin_id`,
      </if>
      <if test="updateAdminName != null">
        `update_admin_name`,
      </if>
      <if test="updateTime != null">
        `update_time`,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="isInner != null">
        `is_inner`,
      </if>
    </trim>
  </sql>
  <!--按照主键值进行操作-->
  <sql id="pkWhere">
    WHERE `role_id` = #{primaryKey}
  </sql>
  <!--操作条件-->
  <sql id="whereCondition">
    <if test="example != null">
      <trim prefix="WHERE" prefixOverrides="AND|OR">
        <if test="example.roleIdNotEquals != null">
          AND `role_id` != #{example.roleIdNotEquals}
        </if>
        <if test="example.roleIdIn != null">
          AND `role_id` in (${example.roleIdIn})
        </if>
        <if test="example.roleName != null">
          AND `role_name` = #{example.roleName}
        </if>
        <if test="example.roleNameLike != null">
          AND `role_name` like concat('%',#{example.roleNameLike},'%')
        </if>
        <if test="example.description != null">
          AND `description` = #{example.description}
        </if>
        <if test="example.createAdminId != null">
          AND `create_admin_id` = #{example.createAdminId}
        </if>
        <if test="example.createAdminName != null">
          AND `create_admin_name` = #{example.createAdminName}
        </if>
        <if test="example.createAdminNameLike != null">
          AND `create_admin_name` like concat('%',#{example.createAdminNameLike},'%')
        </if>
        <if test="example.createTimeAfter != null">
          AND `create_time` <![CDATA[ >= ]]> #{example.createTimeAfter}
        </if>
        <if test="example.createTimeBefore != null">
          AND `create_time` <![CDATA[ <= ]]> #{example.createTimeBefore}
        </if>
        <if test="example.updateAdminId != null">
          AND `update_admin_id` = #{example.updateAdminId}
        </if>
        <if test="example.updateAdminName != null">
          AND `update_admin_name` = #{example.updateAdminName}
        </if>
        <if test="example.updateAdminNameLike != null">
          AND `update_admin_name` like concat('%',#{example.updateAdminNameLike},'%')
        </if>
        <if test="example.updateTimeAfter != null">
          AND `update_time` <![CDATA[ >= ]]> #{example.updateTimeAfter}
        </if>
        <if test="example.updateTimeBefore != null">
          AND `update_time` <![CDATA[ <= ]]> #{example.updateTimeBefore}
        </if>
        <if test="example.state != null">
          AND `state` = #{example.state}
        </if>
        <if test="example.isInner != null">
          AND `is_inner` = #{example.isInner}
        </if>
      </trim>
    </if>
  </sql>
  <!--排序条件-->
  <sql id="orderBy">
    ORDER BY `role_id` DESC
  </sql>
  <sql id="orderByOther">
    order by ${example.orderBy}
  </sql>
  <!--分组条件-->
  <sql id="groupBy">
    group by ${example.groupBy}
  </sql>
  <!--分页条件-->
  <sql id="limit">
    <if test="size != null and size &gt; 0">
      limit #{startRow},#{size}
    </if>
  </sql>
  <!--查询符合条件的记录数-->
  <select id="countByExample" parameterType="com.slodon.b2b2c.system.example.SystemRoleExample" resultType="java.lang.Integer">
    SELECT
      COUNT(*)
    FROM `sys_system_role`
    <include refid="whereCondition" />
  </select>
  <!--根据主键查询记录-->
  <select id="getByPrimaryKey" resultMap="resultMap">
    SELECT
      *
    FROM `sys_system_role`
    <include refid="pkWhere" />
  </select>
  <!--查询符合条件的记录(所有字段)-->
  <select id="listByExample" resultMap="resultMap">
    SELECT
      *
    FROM `sys_system_role`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
  </select>
  <!--分页查询符合条件的记录(所有字段)-->
  <select id="listPageByExample" resultMap="resultMap">
    SELECT
      *
    FROM `sys_system_role`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
    <include refid="limit" />
  </select>
  <!--查询符合条件的记录(指定字段)-->
  <select id="listFieldsByExample" resultMap="resultMap">
    SELECT
      ${fields}
    FROM `sys_system_role`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
  </select>
  <!--分页查询符合条件的记录(指定字段)-->
  <select id="listFieldsPageByExample" resultMap="resultMap">
    SELECT
      ${fields}
    FROM `sys_system_role`
    <include refid="whereCondition" />
    <if test="example.groupBy != null">
      <include refid="groupBy" />
    </if>
    <choose>
      <when test="example.orderBy != null">
        <include refid="orderByOther" />
      </when>
      <otherwise>
        <include refid="orderBy" />
      </otherwise>
    </choose>
    <include refid="limit" />
  </select>
  <!--根据条件删除记录，可多条删除-->
  <delete id="deleteByExample">
    DELETE FROM `sys_system_role`
    <include refid="whereCondition" />
  </delete>
  <!--根据主键删除记录-->
  <delete id="deleteByPrimaryKey">
    DELETE FROM `sys_system_role`
    <include refid="pkWhere" />
  </delete>
  <!--插入一条记录-->
  <insert id="insert" keyColumn="role_id" keyProperty="roleId" parameterType="com.slodon.b2b2c.system.pojo.SystemRole" useGeneratedKeys="true">
    INSERT INTO `sys_system_role`(
    <include refid="columns" />
    )
    VALUES(
    <trim suffixOverrides=",">
      <if test="roleName != null">
        #{roleName},
      </if>
      <if test="description != null">
        #{description},
      </if>
      <if test="createAdminId != null">
        #{createAdminId},
      </if>
      <if test="createAdminName != null">
        #{createAdminName},
      </if>
      <if test="createTime != null">
        #{createTime},
      </if>
      <if test="updateAdminId != null">
        #{updateAdminId},
      </if>
      <if test="updateAdminName != null">
        #{updateAdminName},
      </if>
      <if test="updateTime != null">
        #{updateTime},
      </if>
      <if test="state != null">
        #{state},
      </if>
      <if test="isInner != null">
        #{isInner},
      </if>
    </trim>
    )
  </insert>
  <!--按条件更新记录中不为空的字段-->
  <update id="updateByExampleSelective">
    UPDATE `sys_system_role`
    <trim prefix="SET" suffixOverrides=",">
      <if test="record.roleName != null">
        `role_name` = #{record.roleName},
      </if>
      <if test="record.description != null">
        `description` = #{record.description},
      </if>
      <if test="record.createAdminId != null">
        `create_admin_id` = #{record.createAdminId},
      </if>
      <if test="record.createAdminName != null">
        `create_admin_name` = #{record.createAdminName},
      </if>
      <if test="record.createTime != null">
        `create_time` = #{record.createTime},
      </if>
      <if test="record.updateAdminId != null">
        `update_admin_id` = #{record.updateAdminId},
      </if>
      <if test="record.updateAdminName != null">
        `update_admin_name` = #{record.updateAdminName},
      </if>
      <if test="record.updateTime != null">
        `update_time` = #{record.updateTime},
      </if>
      <if test="record.state != null">
        `state` = #{record.state},
      </if>
      <if test="record.isInner != null">
        `is_inner` = #{record.isInner},
      </if>
    </trim>
    <include refid="whereCondition" />
  </update>
  <!--按照主键更新记录中不为空的字段-->
  <update id="updateByPrimaryKeySelective">
    UPDATE `sys_system_role`
    <trim prefix="SET" suffixOverrides=",">
      <if test="roleName != null">
        `role_name` = #{roleName},
      </if>
      <if test="description != null">
        `description` = #{description},
      </if>
      <if test="createAdminId != null">
        `create_admin_id` = #{createAdminId},
      </if>
      <if test="createAdminName != null">
        `create_admin_name` = #{createAdminName},
      </if>
      <if test="createTime != null">
        `create_time` = #{createTime},
      </if>
      <if test="updateAdminId != null">
        `update_admin_id` = #{updateAdminId},
      </if>
      <if test="updateAdminName != null">
        `update_admin_name` = #{updateAdminName},
      </if>
      <if test="updateTime != null">
        `update_time` = #{updateTime},
      </if>
      <if test="state != null">
        `state` = #{state},
      </if>
      <if test="isInner != null">
        `is_inner` = #{isInner},
      </if>
    </trim>
    WHERE `role_id` = #{roleId}
  </update>
</mapper>